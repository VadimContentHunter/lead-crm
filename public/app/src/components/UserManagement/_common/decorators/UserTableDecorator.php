<?php

namespace crm\src\components\UserManagement\_common\decorators;

class UserTableDecorator
{
    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü –¥–µ–π—Å—Ç–≤–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–Ω–æ–ø–∫–∏).
     *
     * @param  string[] $header
     * @param  array<array<mixed>> $rows
     * @param  string $actionLabel –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞
     * @return array{header: string[], rows: array<array<mixed>>}
     */
    public function decorateWithActions(array $header, array $rows, string $actionLabel = '–î–µ–π—Å—Ç–≤–∏—è'): array
    {
        $newHeader = [...$header, $actionLabel];
        $newRows = [];

        foreach ($rows as $row) {
            $id = $this->extractId($row);
            $buttons = $this->buildActions($id);

            $newRows[] = [...$row, $buttons];
        }

        return [
            'header' => $newHeader,
            'rows' => $newRows
        ];
    }

    protected function extractId(array $row): mixed
    {
        // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, ID ‚Äî —ç—Ç–æ –ø–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–∏–ª–∏ –Ω–∞–π–¥–∏ –ø–æ –∫–ª—é—á—É)
        return $row[0]['value'] ?? $row[0] ?? null;
    }

    protected function buildActions(mixed $id): string
    {
        return <<<HTML
            <button type="button" class="btn-edit" data-id="{$id}">‚úèÔ∏è</button>
            <button type="button" class="btn-delete" data-id="{$id}">üóëÔ∏è</button>
        HTML;
    }
}
